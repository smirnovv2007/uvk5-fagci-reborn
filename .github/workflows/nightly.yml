name: Nightly Release

on:
  schedule:
    - cron: "0 0 * * *"
    
  workflow_dispatch:

jobs:
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      should_run: ${{ steps.should_run.outputs.should_run }}
    steps:
      - uses: actions/checkout@v2
      - name: print latest_commit
        run: echo ${{ github.sha }}

      # - name: check latest commit is less than a day
      #   id: should_run
      #   continue-on-error: true
      #   run: test -z $(git rev-list  --after="24 hours" ${{ github.sha }}) && echo "should_run=false" >> $GITHUB_OUTPUT
  build:
    needs: check_date
    if: ${{ needs.check_date.outputs.should_run != 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
      - name: Get version date
        id: version_date
        run: echo "date=n_$(date +'%y%m%d')" >> $GITHUB_OUTPUT
      - name: arm-none-eabi-gcc
        uses: carlosperate/arm-none-eabi-gcc-action@v1
        with:
          release: '13.2.Rel1'

      - name: Install Python dependencies
        run: python3 -m pip install --upgrade pip crcmod
  
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Submodules
        run: git submodule update --init --recursive --depth 1

      - name: Create changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          {
            echo 'content<<EOF'
            python3 .github/workflows/changelog.py
            echo EOF
          } >> "$GITHUB_OUTPUT"
        id: changelog
  
      - name: Make
        run:  make
  
      - name: size
        run:  arm-none-eabi-size bin/firmware
  
      - name: rename
        run: mv bin/firmware.bin k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.raw.bin
  
      - name: rename
        run: mv bin/firmware.packed.bin k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.bin
  
      - name: rename
        run: mv chirp/chirp_uvk5_fagci_reborn.py k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}-chirp-module.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-tag-${{ steps.date.outputs.date }}
          release_name: Nightly Release - ${{ steps.date.outputs.date }}
          body: |
            **Nightly release - ${{ steps.date.outputs.date }}**
            This build is the latest and greatest, although may not be the most stable as this is a nightly release.
            ## Release notes
            ###  Revision (${{ steps.version_date.outputs.date }}):
            ${{ steps.changelog.outputs.content }}
          draft: false
          prerelease: true
  
      - name: 'Add unpacked FW to release'
        uses: svenstaro/upload-release-action@v2
        with:
          tag: nightly-tag-${{ steps.date.outputs.date }}
          file: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.raw.bin
  
      - name: 'Add packed FW to release'
        uses: svenstaro/upload-release-action@v2
        with:
          tag: nightly-tag-${{ steps.date.outputs.date }}
          file: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.bin
  
      - name: 'Add chirp module to release'
        uses: svenstaro/upload-release-action@v2
        with:
          tag: nightly-tag-${{ steps.date.outputs.date }}
          file: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}-chirp-module.py

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.bin
          path: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.bin

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}-chirp-module.py
          path: k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}-chirp-module.py

      - name: send msg
        run: |
          curl --url "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMediaGroup" \
          -F "chat_id=${{ secrets.TELEGRAM_TO }}" \
          -F 'media=[{"type": "document", "media": "attach://file1"}, {"type": "document", "media": "attach://file2", "caption": "https://github.com/fagci/uvk5-fagci-reborn/releases/tag/nightly-tag-${{ steps.date.outputs.date }}" }]' \
          -F "file2=@k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}.bin" \
          -F "file1=@k5-fagci-r3b0rn-nightly-${{ steps.version_date.outputs.date }}-chirp-module.py"
      
